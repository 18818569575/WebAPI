<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.ohdsi</groupId>
	<artifactId>WebAPI</artifactId>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>WebAPI</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jersey.version>2.14</jersey.version>
		<!-- Spring Boot manages spring.version as well -->
		<spring.boot.version>1.2.1.RELEASE</spring.boot.version>
		<start-class>org.ohdsi.webapi.WebApi</start-class>

		<!-- default sql server -->
		<!-- Spring boot will create a Datasource for autowiring based on these 
			props. -->
		<spring.datasource.username></spring.datasource.username>
		<spring.datasource.password></spring.datasource.password>
		<spring.datasource.driverClassName>com.microsoft.sqlserver.jdbc.SQLServerDriver</spring.datasource.driverClassName>
		<spring.datasource.url>jdbc:sqlserver://serverName;user=userName;password=password;</spring.datasource.url>

		<datasource.dialect>sql server</datasource.dialect>
		<datasource.cdm.schema>[CDM_DATABASE].dbo</datasource.cdm.schema>
		<datasource.ohdsi.schema>[CDM_DATABASE_RESULTS].dbo</datasource.ohdsi.schema>
		<datasource.dialect.source>sql server</datasource.dialect.source>

		<spring.profiles.active>default</spring.profiles.active>
	</properties>
	<build>
		<finalName>WebAPI</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.*</include>
				</includes>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/test/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.*</include>
				</includes>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	            <version>${spring.boot.version}</version>
				<!-- executable-war via 'java -jar WebAPI-exec.war' currently fails with Jersey FileNotFound exception. TODO -->
	            <configuration>
	            	<!-- Since we filter properties files via Maven, do not add resources. -->
	            	<addResources>false</addResources>
	            	<!-- executable-jar
	                <classifier>exec</classifier>
	                -->
	            </configuration>
	            <!-- executable-jar
	            <executions>
	                <execution>
	                    <goals>
	                        <goal>repackage</goal>
	                    </goals>
	                </execution>
	            </executions>
	            -->
	        </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<includes>
						<include>**/*IT.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>failsafe-integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>http://repo.maven.apache.org/maven2/ </url>
		</repository>
		<repository>
			<id>ohdsi</id>
			<name>repo.ohdsi.org</name>
			<url>http://repo.ohdsi.org:8085/nexus/content/repositories/releases</url>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-actuator</artifactId> 
			<version>${spring.boot.version}</version> </dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring.boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<version>${spring.boot.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- <dependency> <groupId>org.glassfish.jersey.containers</groupId> <artifactId>jersey-container-servlet</artifactId> 
			</dependency> <dependency> <groupId>org.glassfish.jersey.media</groupId> 
			<artifactId>jersey-media-json-jackson</artifactId> </dependency> -->
		<dependency>
			<groupId>org.ohdsi.sql</groupId>
			<artifactId>SqlRender</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring.boot.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>webapi-oracle</id>
			<properties>
				<spring.datasource.username></spring.datasource.username>
				<spring.datasource.password></spring.datasource.password>
				<spring.datasource.driverClassName>oracle.jdbc.OracleDriver</spring.datasource.driverClassName>
				<!-- Override in settings.xml with actual user/pass -->
				<spring.datasource.url>jdbc:oracle:thin:USER/PASS@172.31.80.28:1521:i2b2idp</spring.datasource.url>
				<datasource.dialect>oracle</datasource.dialect>
				<datasource.cdm.schema>omopv5_de</datasource.cdm.schema>
				<datasource.ohdsi.schema>ohdsi</datasource.ohdsi.schema>
			</properties>
			<dependencies>
				<dependency>
					<groupId>ojdbc</groupId>
					<artifactId>ojdbc</artifactId>
					<version>6.0.0</version>
					<!-- If you have it local and not in a repository <systemPath></systemPath> -->
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
